{"version":3,"sources":["../src/linked-list.js"],"names":[],"mappings":"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","file":"src/linked-list.js","sourcesContent":["import LinkedListNode from './linked-list-node'\n\nexport default class LinkedList {\n    constructor() {\n        this.head = new LinkedListNode()\n        this.tail = new LinkedListNode()\n        this.head.next = this.tail\n        this.head.remove = undefined\n        this.tail.remove = undefined\n    }\n    \n    getFirstNode() {\n        if(this.head.next === this.tail)\n            return undefined\n        return this.head.next\n    }\n    getLastNode() {\n        if(this.tail.prev === this.head)\n            return undefined\n        return this.tail.prev\n    }\n    addFirst(element) {\n        var node = new LinkedListNode(element)\n        this.head.insertAfter(node)\n        return node\n    }\n    addLast(element) {\n        var node = new LinkedListNode(element)\n        this.tail.insertBefore(node)\n        return node\n    }\n    removeFirst() {\n        var node = this.head.next\n        if(node === this.tail)\n            throw new Error()\n        node.remove()\n        return node.value\n    }\n    removeLast() {\n        var node = this.tail.prev\n        if(node === this.head)\n            throw new Error()\n        node.remove()\n        return node.value\n    }\n    getFirst() {\n        return this.head.next.value\n    }\n    getLast() {\n        return this.tail.prev.value\n    }\n    forEach(func) {\n        this.forEachNode(node => func(node.value))\n    }\n    forEachNode(func) {\n        var node = this.head\n        while(true) {\n            node = node.next\n            if(node === this.tail)\n                return\n            if(node.removed)\n                continue\n            func(node)\n        }\n    }\n    forEach_reverse(func) {\n        this.forEachNode_reverse(node => func(node.value))\n    }\n    forEachNode_reverse(func) {\n        var node = this.tail\n        while(true) {\n            node = node.prev\n            if(node === this.head)\n                return\n            if(node.removed)\n                continue\n            func(node)\n        }\n    }\n\n    /*\n     * Iteration in continuation-passing style.\n     * This is useful when the passed callback returns without calling one of its continuation\n     * parameters, instead storing either or both of the continuation callbacks for use in another\n     * stack frame.\n     * func takes 3 parameters:\n     *   element - The object stored in the list\n     *   retroceed - Call this to make func get called again with the previous element and new\n     *     continuation functions. Returns true if the head of the list was reached.\n     *   proceed - Call this to make func get called again with the next element and new\n     *     continuation functions, like retroceed but backwards. Returns true if the tail of the\n     *     list was reached.\n     */\n    forEach_c(func, onEmpty) {\n        this.forEachNode_c(((node, retroceed, proceed) => func(node.value, retroceed, proceed)),\n                           onEmpty)\n    }\n    forEach_reverse_c(func, onEmpty) {\n        this.forEachNode_reverse_c(((node, retroceed, proceed) => func(node.value, retroceed, proceed)),\n                                   onEmpty)\n    }\n    \n    _makeContinuations(node, func) {\n        var proceed = () => {\n            while(true) {\n                node = node.next\n                if(node === this.tail)\n                    return true\n                if(node.removed)\n                    continue\n                func(node, retroceed, proceed)\n                return false\n            }\n        }\n        var retroceed = () => {\n            while(true) {\n                node = node.prev\n                if(node === this.head)\n                    return true\n                if(node.removed)\n                    continue\n                func(node, retroceed, proceed)\n                return false\n            }\n        }\n        return {\n            proceed: proceed,\n            retroceed: retroceed\n        }\n    }\n    \n    forEachNode_c(func, onEmpty) {\n        if(this.empty) {\n            onEmpty()\n            return\n        }\n        this._makeContinuations(this.head, func).proceed()\n    }\n    \n    forEachNode_reverse_c(func, onEmpty) {\n        if(this.empty) {\n            onEmpty()\n            return\n        }\n        this._makeContinuations(this.tail, func).retroceed()\n    }\n\n    clear() {\n        this.head.next = this.tail\n    }\n\n    /*\n     * Calls predicate on each element until predicate returns true. Returns whether predicate\n     * returned true.\n     */\n    some(predicate) {\n        return this.someNode(node => predicate(node.value))\n    }\n\n    /*\n     * Calls predicate on each node until predicate returns true. Returns whether predicate returned\n     * true.\n     */\n    someNode(predicate) {\n        var node = this.head\n        while(true) {\n            node = node.next\n            if(node === this.tail)\n                return false\n            if(node.removed)\n                continue\n            if(predicate(node))\n                return true\n        }\n    }\n    \n    strictlyContains(element) {\n        return this.some(a => a === element)\n    }\n    \n    toArray() {\n        var result = []\n        this.forEach(v => result.push(v))\n        return result\n    }\n    \n    toNodeArray() {\n        var result = []\n        this.forEachNode(node => result.push(node))\n        return result\n    }\n    \n    get empty() {\n        return this.head.next === this.tail\n    }\n}\n// explicit property definition so it can be overridden\nObject.defineProperty(LinkedList.prototype, 'size', {get: function() {\n    var result = 0\n    this.forEachNode(() => { result += 1 })\n    return result\n}})\n"]}