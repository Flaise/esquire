{"version":3,"sources":["../../src/scene/atlas.js"],"names":[],"mappings":"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","file":"src/scene/atlas.js","sourcesContent":["import {default as Icon} from './icon'\n\n\nexport default class Atlas {\n    constructor() {\n        this.icons = Object.create(null)\n        this.layout = undefined\n    }\n    \n    get(name) {\n        let icon = this.icons[name]\n        if(!icon) {\n            const sprite = (this.layout && this.layout.sprites &&\n                            this.layout.sprites[name])\n            icon = new Icon(this, sprite)\n            this.icons[name] = icon\n        }\n        return icon\n    }\n    \n    has(name) {\n        return !!(this.icons[name] || (this.layout && this.layout[name]))\n    }\n    \n    loadImage(source, next) {\n        loadImageObject(source, (err, image) => {\n            if(err)\n                return next && next(err)\n            \n            this.image = image\n            next()\n        })\n    }\n    \n    load(data, next) {\n        const oldImage = this.layout && this.layout.image\n        \n        for(let spriteName of Object.keys(data.sprites)) {\n            const icon = this.icons[spriteName]\n            if(icon)\n                icon.load(data.sprites[spriteName])\n        }\n        this.layout = data\n        \n        if(data.image && data.image !== oldImage) {\n            this.image = undefined\n            this.loadImage(data.image, next)\n        }\n        else {\n            setTimeout(next)\n        }\n    }\n}\n\nfunction loadImageObject(source, next) {\n    const image = new window.Image()\n    image.onload = () => {\n        image.onload = image.onerror = image.onabort = undefined\n        next && next(undefined, image)\n    }\n    image.onerror = () => {\n        image.onload = image.onerror = image.onabort = undefined\n        next && next(new Error('Unable to load image.'))\n    }\n    image.src = source\n}\n"]}