{"version":3,"sources":["../../src/scene/pie-paths.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;;AAG9B,SAAS,QAAQ,CAAC,OAAO,EAAE;AACvB,UAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AAC1B,UAAM,CAAC,SAAS,CAAC,IAAI,EAAE;AACnB,cAAM,EAAE,EAAE;AACV,qBAAa,EAAE,OAAO,CAAC,YAAY;KACtC,CAAC,CAAA;CACL;AACD,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;AACpD,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAA;;AAEnC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AACnC,QAAG,IAAI,CAAC,OAAO,EACX,OAAM;AACV,QAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AAC/B,YAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA;KACtB,CAAC,CAAA;AACF,UAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;CACrC,CAAA;;AAED,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,OAAO,EAAE;AACxC,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC3C,YAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;;AAEzB,YAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EACf,SAAQ;;AAEZ,YAAI,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAA;AACtC,YAAI,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,OAAO,CAAA;AACxC,kBAAU,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;AACxC,gBAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;;AAEpC,eAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACpB,eAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,EAClE,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAA;AAC9B,eAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAA;KACjF;CACJ,CAAA;;AAED,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,KAAK,EAAE;AACxE,QAAI,MAAM,GAAG;;AAET,eAAO,EAAE,OAAO;;;AAGhB,kBAAU,EAAE,UAAU;;AAEtB,mBAAW,EAAE,WAAW;KAC3B,CAAA;AACD,UAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAA;AACrE,QAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AACxB,WAAO,MAAM,CAAA;CAChB,CAAA","file":"src/scene/pie-paths.js","sourcesContent":["'use strict'\n\nvar Avatar = require('./avatar')\nvar sanity = require('./sanity')\nvar turns = require('./turns')\n\n\nfunction PiePaths(avatars) {\n    Avatar.call(this, avatars)\n    sanity.constants(this, {\n        _paths: [],\n        _interpolands: avatars.interpolands\n    })\n}\nPiePaths.prototype = Object.create(Avatar.prototype)\nmodule.exports = exports = PiePaths\n\nPiePaths.prototype.remove = function() {\n    if(this.removed)\n        return\n    this._paths.forEach(function(path) {\n        path.scale.remove()\n    })\n    Avatar.prototype.remove.call(this)\n}\n\nPiePaths.prototype.draw = function(context) {\n    for(var i = 0; i < this._paths.length; i += 1) {\n        var path = this._paths[i]\n        \n        if(!path.scale.curr)\n            continue\n        \n        var startAngle = path.startAngle - .25\n        var endAngle = startAngle + path.breadth\n        startAngle = turns.toRadians(startAngle)\n        endAngle = turns.toRadians(endAngle)\n        \n        context.moveTo(0, 0)\n        context.arc(0, 0, path.scale.curr / 2 * path.innerRadius, endAngle, startAngle,\n                    path.breadth >= 0)\n        context.arc(0, 0, path.scale.curr / 2, startAngle, endAngle, path.breadth < 0)\n    }\n}\n\nPiePaths.prototype.make = function(breadth, startAngle, innerRadius, scale) {\n    var result = {\n        // Distance of second jaw from first jaw. Positive is clockwise.\n        breadth: breadth,\n        \n        // Distance of first jaw from north. Positive is clockwise.\n        startAngle: startAngle,\n        \n        innerRadius: innerRadius\n    }\n    sanity.constant(result, 'scale', this._interpolands.make(scale || 1))\n    this._paths.push(result)\n    return result\n}\n"]}