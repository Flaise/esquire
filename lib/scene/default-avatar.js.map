{"version":3,"sources":["../../src/scene/default-avatar.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,IAAI,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AAClD,IAAI,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AACxB,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAChC,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;;AAG9B,SAAS,aAAa,CAAC,OAAO,EAAE;AAC5B,UAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AAC1B,UAAM,CAAC,SAAS,CAAC,IAAI,EAAE;AACnB,SAAC,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,SAAC,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,SAAC,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,SAAC,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,aAAK,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,eAAO,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KACxC,CAAC,CAAA;CACL;AACD,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;AACzD,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,aAAa,CAAA;;AAExC,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,OAAO,EAAE;AACpD,QAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EACzB,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AAC/C,QAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EACd,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;;AAEpD,QAAG,CAAC,IAAI,CAAC,SAAS;AACd,eAAO,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CACnE,CAAA;;AAED,aAAa,CAAC,SAAS,CAAC,qBAAqB,GAAG,YAAW;AACvD,QAAG,IAAI,CAAC,OAAO,EACX,OAAM;AACV,QAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;AACf,QAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;AACf,QAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;AACf,QAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;AACf,QAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA;AACnB,QAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAA;AACrB,UAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;CACrC,CAAA;AACD,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,qBAAqB,CAAA","file":"src/scene/default-avatar.js","sourcesContent":["'use strict'\n\nvar sanity = require('./sanity')\nvar Avatar = require('./avatar')\nvar EventDispatcher = require('./eventdispatcher')\nvar is = require('./is')\nvar esquire = require('./index')\nvar turns = require('./turns')\n\n\nfunction DefaultAvatar(avatars) {\n    Avatar.call(this, avatars)\n    sanity.constants(this, {\n        x: avatars.interpolands.make(0),\n        y: avatars.interpolands.make(0),\n        w: avatars.interpolands.make(0),\n        h: avatars.interpolands.make(0),\n        angle: avatars.interpolands.make(0),\n        opacity: avatars.interpolands.make(1)\n    })\n}\nDefaultAvatar.prototype = Object.create(Avatar.prototype)\nmodule.exports = exports = DefaultAvatar\n\nDefaultAvatar.prototype.doTransform = function(context) {\n    if(this.x.curr || this.y.curr)\n        context.translate(this.x.curr, this.y.curr)\n    if(this.angle.curr)\n        context.rotate(turns.toRadians(this.angle.curr))\n    // can't scale here; it breaks radii and strokes\n    if(!this.skipAlpha) ////////// TODO: always use Opacity group\n        context.globalAlpha = esquire.clamp(this.opacity.curr, 0, 1)\n}\n\nDefaultAvatar.prototype._defaultAvatar_remove = function() {\n    if(this.removed)\n        return\n    this.x.remove()\n    this.y.remove()\n    this.w.remove()\n    this.h.remove()\n    this.angle.remove()\n    this.opacity.remove()\n    Avatar.prototype.remove.call(this)\n}\nDefaultAvatar.prototype.remove = DefaultAvatar.prototype._defaultAvatar_remove\n"]}