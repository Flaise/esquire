{"version":3,"sources":["../../src/scene/tile-field-avatar.js"],"names":[],"mappings":"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","file":"src/scene/tile-field-avatar.js","sourcesContent":["'use strict'\n\nvar Vect2 = require('./vect2')\nvar esquire = require('../esquire')\nvar is = require('./is')\nvar sanity = require('./sanity')\nvar Avatar = require('./avatar')\n\n\nfunction TileFieldAvatar(avatars, tileSize) {\n    Avatar.call(this, avatars)\n\n    this._canv = document.createElement('canvas')\n    this._canv.width = 0\n    this._canv.height = 0\n    this._context = this._canv.getContext('2d')\n    this._context.webkitImageSmoothingEnabled = true\n    this._context.mozImageSmoothingEnabled = true\n    \n    sanity.attribute(this, 'fieldGroup', this, is.object)\n    this._drawOperations = []\n    this._altered = false\n    this._minX = undefined\n    this._minY = undefined\n    this._maxX = undefined\n    this._maxY = undefined\n    this._atlas = undefined\n    this._isLoaded = false\n    \n    // maps types to sets of positions\n    this._type2tiles = {}\n    \n    sanity.attributes(this, {\n        _x: 0,\n        _y: 0,\n        _w: 0,\n        _h: 0\n    }, is.number)\n    \n    this.tileSize = tileSize // assign to property for type checking\n}\nTileFieldAvatar.prototype = Object.create(Avatar.prototype)\nmodule.exports = exports = TileFieldAvatar\n\nObject.defineProperty(TileFieldAvatar.prototype, 'tileSize', {\n    get: function() { return this._tileSize },\n    set: function(value) {\n        if(sanity(is.number(value)))\n            return\n        sanity(is.integer(value))\n        this._tileSize = value\n        this._minX = undefined\n        this._excribeAll()\n        this._alter()\n    }\n})\n\nTileFieldAvatar.prototype._alter = function() {\n    this._altered = true\n}\n\nTileFieldAvatar.prototype.draw = function(context) {\n    if(this._altered) {\n        this._altered = false\n        \n        // shape of selected tile changes when adjacent tile field is altered\n        this._excribeAll()\n        \n        this._canv.width = this._maxX - this._minX\n        this._canv.height = this._maxY - this._minY\n        if(!this._canv.width || !this._canv.height)\n            return\n        \n        this._drawOperations.sort(function(a, b) { return a.layer - b.layer })\n        this._drawOperations.forEach(function(op) { op.execute() })\n        \n        sanity(!this._drawOperations.length || this._atlas)\n    }\n    else if(!this._canv.width || !this._canv.height)\n        return\n    \n    context.drawImage(this._canv, 0, 0, this._canv.width, this._canv.height,\n                      this._x, this._y, this._w, this._h)\n}\n\nTileFieldAvatar.prototype._recordTile = function(type, position) {\n    if(!this._type2tiles[type])\n        this._type2tiles[type] = {}\n    this._type2tiles[type][position] = true\n}\nTileFieldAvatar.prototype._derecordTile = function(type, position) {\n    if(this._type2tiles[type])\n        delete this._type2tiles[type][position]\n}\nTileFieldAvatar.prototype.hasTile = function(position, type) {\n    return this._type2tiles[type] && this._type2tiles[type][position]\n}\n\nTileFieldAvatar.prototype._excribe = function(x, y, w, h) {\n    if(isNaN(x) || isNaN(y) || isNaN(w) || isNaN(h))\n        return\n    \n    x = Math.floor(x)\n    y = Math.floor(y)\n    w = Math.ceil(w)\n    h = Math.ceil(h)\n    \n    if(this._minX === undefined) {\n        this._minX = x\n        this._minY = y\n        this._maxX = x + w\n        this._maxY = y + h\n    }\n    else {\n        this._minX = Math.min(this._minX, x)\n        this._minY = Math.min(this._minY, y)\n        this._maxX = Math.max(this._maxX, x + w)\n        this._maxY = Math.max(this._maxY, y + h)\n    }\n    \n    this._x = this._minX / this._tileSize\n    this._y = this._minY / this._tileSize\n    this._w = (this._maxX - this._minX) / this._tileSize\n    this._h = (this._maxY - this._minY) / this._tileSize\n}\n\nTileFieldAvatar.prototype._excribeIcon = function(icon, x, y, w, h) {\n    if(icon.atlas)\n        this._excribe.apply(this, icon.bounds(x, y, w, h))\n}\nTileFieldAvatar.prototype._excribeTileIcon = function(icon, x, y) {\n    this._excribeIcon(icon, x * this._tileSize, y * this._tileSize, this._tileSize, this._tileSize)\n}\nTileFieldAvatar.prototype._excribeAll = function() {\n    this._drawOperations.forEach(function(op) {\n        op.excribe()\n    })\n}\n\nTileFieldAvatar.prototype._addAtlas = function(atlas) {\n    if(is.defined(this._atlas)) {\n        sanity(atlas === this._atlas)\n        return\n    }\n    this._atlas = atlas\n    var _this = this\n    this._atlas.isLoaded.on_pc(true, function() {\n        _this._isLoaded = true\n        _this._alter()\n    })\n}\n\nTileFieldAvatar.prototype._drawIcon = function(icon, x, y, w, h) {\n    if(sanity.throws) {\n        if(sanity(is.number(x))\n                || sanity(is.number(y))\n                || sanity(is.number(w))\n                || sanity(is.number(h)))\n            return\n    }\n    if(!icon || !icon.atlas)\n        return\n    this._addAtlas(icon.atlas)\n    if(this._isLoaded)\n        icon.draw(this._context, x, y, w, h)\n}\n\n\nvar xs = [-.25, .25, -.25, .25]\nvar ys = [-.25, -.25, .25, .25]\n\nTileFieldAvatar.prototype.drawSelectedTile = function(selector, type, x, y, layer, observedTypes) {\n    var _this = this\n    \n    if(sanity(is.defined(layer)))\n        layer = 0\n    if(!observedTypes)\n        observedTypes = [type]\n\n    var here = new Vect2(x, y)\n    this._recordTile(type, here)\n\n    function hasTilei(dx, dy) {\n        var dest = here.sumi(dx, dy)\n        return observedTypes.some(function(t) { return _this.fieldGroup.hasTile(dest, t) })\n    }\n    \n    function select() {\n        return selector(hasTilei(-1, -1), hasTilei(0, -1), hasTilei(1, -1),\n                        hasTilei(-1, 0), hasTilei(1, 0),\n                        hasTilei(-1, 1), hasTilei(0, 1), hasTilei(1, 1))\n    }\n    \n    var op = {\n        name: 'drawSelectedTile: ' + type,\n        layer: y + layer,\n        execute: function() {\n            select().forEach(function(icon, index) {\n                if(!icon)\n                    return\n                _this._drawIcon(icon, Math.floor((x + xs[index]) * _this._tileSize - _this._minX),\n                                Math.floor((y + ys[index]) * _this._tileSize - _this._minY),\n                                _this._tileSize / 2, _this._tileSize / 2)\n            })\n        },\n        excribe: function() {\n            select().forEach(function(icon, index) {\n                if(!icon)\n                    return\n                _this._excribeIcon(icon, (x + xs[index]) * _this._tileSize,\n                                   (y + ys[index]) * _this._tileSize,\n                                   _this._tileSize / 2, _this._tileSize / 2)\n            })\n        }\n    }\n    this._drawOperations.push(op)\n    this._alter()\n    \n    return function() {\n        _this._derecordTile(type, here)\n        removeFromArray(_this._drawOperations, op)\n        _this._alter()\n    }\n}\n\nTileFieldAvatar.prototype.drawTile = function(icon, x, y, layer, type) {\n    var _this = this\n    \n    if(sanity(icon))\n        return function() {}\n    if(sanity(is.defined(layer)))\n        layer = 0\n    \n    if(type) {\n        var here = new Vect2(x, y) // make visible to returned removal\n        this._recordTile(type, here)\n    }\n    \n    var op = {\n        name: 'drawTile: ' + (icon && icon.data && icon.data.name),\n        layer: y + layer,\n        execute: function() {\n            _this._drawIcon(icon, Math.floor(x * _this._tileSize - _this._minX),\n                            Math.floor(y * _this._tileSize - _this._minY),\n                            _this._tileSize, _this._tileSize)\n        },\n        excribe: function() {\n            _this._excribeTileIcon(icon, x, y)\n        }\n    }\n    this._drawOperations.push(op)\n    this._alter()\n    \n    return function() {\n        if(type)\n            _this._derecordTile(type, here)\n        removeFromArray(_this._drawOperations, op)\n        _this._alter()\n    }\n}\n\n\nfunction removeFromArray(array, element) {\n    var index = array.indexOf(element)\n    if(index >= 0)\n        array.splice(index, 1)\n    return index\n}\n"]}