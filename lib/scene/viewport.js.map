{"version":3,"sources":["../../src/scene/viewport.js"],"names":[],"mappings":";;;;;;;;;;;;+BAA4B,qBAAqB;;;;kBAClC,OAAO;;;;4BACG,iBAAiB;;;;0BACnB,gBAAgB;;;;AAGvC,IAAM,gBAAgB,GAClB,MAAM,CAAC,qBAAqB,IACzB,MAAM,CAAC,2BAA2B,IAClC,MAAM,CAAC,wBAAwB,IAC/B,MAAM,CAAC,sBAAsB,IAC7B,MAAM,CAAC,uBAAuB,IAC9B,UAAS,QAAQ,EAAE;AAAE,WAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,GAAG,EAAE,CAAC,CAAA;CAAE,AAC1E,CAAA;;IAEoB,QAAQ;AACd,aADM,QAAQ,CACb,MAAM,EAAE;8BADH,QAAQ;;AAErB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAA;AACpB,YAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;AACtC,YAAI,CAAC,YAAY,GAAG,+BAAkB,CAAA;AACtC,YAAI,CAAC,KAAK,GAAG,6BAAgB,CAAA;AAC7B,YAAI,CAAC,YAAY,GAAG,kCAAqB,CAAA;AACzC,YAAI,CAAC,WAAW,GAAG,kCAAqB,CAAA;AACxC,YAAI,CAAC,SAAS,GAAG,SAAS,CAAA;AAC1B,YAAI,CAAC,SAAS,GAAG,KAAK,CAAA;KACzB;;iBAVgB,QAAQ;;eAYlB,mBAAG;;;AACN,gBAAG,IAAI,CAAC,SAAS,EACb,OAAM;AACV,4BAAgB,CAAC,YAAM;AACnB,sBAAK,SAAS,GAAG,KAAK,CAAA;AACtB,sBAAK,IAAI,EAAE,CAAA;aACd,CAAC,CAAA;AACF,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAA;SACxB;;;eAES,sBAAG;;;AACT,gBAAI,CAAC,OAAO,EAAE,CAAA;AACd,gBAAI,CAAC,WAAW,CAAC,MAAM,CAAC;uBAAM,OAAK,OAAO,EAAE;aAAA,CAAC,CAAA;SAChD;;;;;;;;eAMc,2BAAG;;;AACd,mBAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAA,OAAO,EAAI;AACvC,uBAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,OAAK,MAAM,CAAC,KAAK,EAAE,OAAK,MAAM,CAAC,MAAM,CAAC,CAAA;aACjE,CAAC,CAAA;SACL;;;eAEG,gBAAG;AACH,gBAAG,CAAC,IAAI,CAAC,MAAM,EACX,OAAM;;AAEV,gBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC/B,gBAAI,CAAC,MAAM,EAAE,CAAA;AACb,gBAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,MAAM;uBAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAAA,CAAC,CAAA;AAClD,gBAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;SACjC;;;eAEK,kBAAG;AACL,gBAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AAC/B,gBAAG,gBAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,KAE3B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAA;AAC3D,gBAAI,CAAC,SAAS,GAAG,YAAY,CAAA;SAChC;;;WAtDgB,QAAQ;;;qBAAR,QAAQ","file":"src/scene/viewport.js","sourcesContent":["import EventDispatcher from '../event-dispatcher'\nimport is from '../is'\nimport Interpolands from '../interpolands'\nimport LinkedList from '../linked-list'\n\n\nconst requestAnimFrame = (\n    window.requestAnimationFrame\n    || window.webkitRequestAnimationFrame\n    || window.mozRequestAnimationFrame\n    || window.oRequestAnimationFrame\n    || window.msRequestAnimationFrame\n    || function(callback) { return window.setTimeout(callback, 1000 / 60) }\n)\n\nexport default class Viewport {\n    constructor(canvas) {\n        this.canvas = canvas\n        this.context = canvas.getContext('2d')\n        this.interpolands = new Interpolands()\n        this.alive = new LinkedList()\n        this.onBeforeDraw = new EventDispatcher()\n        this.onAfterDraw = new EventDispatcher()\n        this.lastFrame = undefined\n        this.animFrame = false\n    }\n    \n    changed() {\n        if(this.animFrame)\n            return\n        requestAnimFrame(() => {\n            this.animFrame = false\n            this.draw()\n        })\n        this.animFrame = true\n    }\n    \n    repeatDraw() {\n        this.changed()\n        this.onAfterDraw.listen(() => this.changed())\n    }\n    \n    /*\n     * Leaving this unused can mitigate rendering artifacts caused by tiling alpha blended\n     * background images.\n     */\n    clearBeforeDraw() {\n        return this.onBeforeDraw.listen(context => {\n            context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        })\n    }\n    \n    draw() {\n        if(!this.canvas)\n            return\n        \n        this.onBeforeDraw.proc(context)\n        this.update()\n        this.alive.forEach(avatar => avatar.draw(context))\n        this.onAfterDraw.proc(context)\n    }\n    \n    update() {\n        const currentFrame = Date.now()\n        if(is.nullish(this.lastFrame))\n            this.interpolands.update(0)\n        else\n            this.interpolands.update(currentFrame - this.lastFrame)\n        this.lastFrame = currentFrame\n    }\n}\n"]}