{"version":3,"sources":["../src/vector2.js"],"names":[],"mappings":"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","file":"src/vector2.js","sourcesContent":["import {toRadians, toVector} from './turns'\n\n\nexport default class Vec2 {\n    constructor(x, y) {\n        this.x = x\n        this.y = y\n    }\n    equals(obj) {\n        return obj && this.x === obj.x && this.y === obj.y\n    }\n    hashCode() {\n        return (this.x << 8) | this.y\n    }\n    \n    sum(other) {\n        if(isNaN(other))\n            return this.sumXY(other.x, other.y)\n        else\n            return this.sum(toVector(other))\n    }\n    sumXY(x, y) {\n        return new Vec2(this.x + x, this.y + y)\n    }\n    \n    distance4(other) {\n        return distance4(this.x, this.y, other.x, other.y)\n    }\n    distance8(other) {\n        return distance8(this.x, this.y, other.x, other.y)\n    }\n    \n    rotatedTurns(angle) {\n        return rotatedXYTurns(this.x, this.y, angle)\n    }\n    rotatedRadians(angle) {\n        return rotatedXYRadians(this.x, this.y, angle)\n    }\n    \n    toString() {\n        return this.x + ',' + this.y\n    }\n    \n    get inverse() {\n        return new Vec2(-this.x, -this.y)\n    }\n}\n\nexport function ZERO() {\n    return new Vec2(0, 0)\n}\nexport function distance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n}\nexport function distance4(x1, y1, x2, y2) {\n    return Math.abs(this.x - other.x) + Math.abs(this.y - other.y)\n}\nexport function distance8(x1, y1, x2, y2) {\n    return Math.max(Math.abs(this.x - other.x), Math.abs(this.y - other.y))\n}\nexport function rotatedXYTurns(x, y, angle) {\n    return rotatedXYRadians(x, y, toRadians(angle))\n}\nexport function rotatedXYRadians(x, y, angle) {\n    const s = Math.sin(angle)\n    const c = Math.cos(angle)\n    return new Vec2(x * c - y * s, x * s + y * c)\n}\n"]}